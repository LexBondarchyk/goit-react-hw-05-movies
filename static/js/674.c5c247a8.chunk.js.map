{"version":3,"file":"static/js/674.c5c247a8.chunk.js","mappings":"+SAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAIhBA,EAAIC,KAAKC,SAJO,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADQ,cACpBJ,EADoB,yBAKnBA,EAAIC,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMC,GAAN,uFACdV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,EADd,oBAC4BX,EAD5B,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAQlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACdV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKO,MALgB,2CAAH,sDASlBC,EAAkB,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD,oDCb/B,IA5BkB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MAEf,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaV,GAAMW,MAAO,CAAEC,KAAMP,GAA1C,UAEE,wBAAKG,GAAOC,OAHPT,EADC,OAWnB,C,2GCrBD,EAAwB,wB,+DCQT,SAASa,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,UAGA3B,EAAAA,EAAAA,IAAU4B,GAHV,OAIC,KADb1B,EAHY,QAIV8B,QACNC,IAAAA,OAAAA,QAAwB,oBAE1BV,EAAUrB,GAPQ,gDASlBuB,EAAS,kCATS,yBAWlBE,GAAW,GAXO,4EAAH,qDAcnBI,GACD,GAAE,CAACH,KAIE,4BACE,eAAIM,UAAWC,EAAf,6BACCT,EAAUO,IAAAA,QAAAA,QAA2BA,IAAAA,QAAAA,SACnCT,GAASS,IAAAA,OAAAA,QAAA,UAA2BT,IACtCZ,IAAU,SAACwB,EAAA,EAAD,CAAWxB,OAAQA,MAGrC,C","sources":["Api/api.jsx","components/MoviesList/MovieList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\nconst MovieList = ({ movies }) => {\nconst location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {}\n              <h3>{title||name}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import styles from './HomePage.module.css';\nimport MovieList from 'components/MoviesList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovies  } from 'Api/api';\n\nimport Notiflix from 'notiflix';\n\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n \n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n      const res = await getMovies(movieId)\n      if (res.length === 0 ) {\n        Notiflix.Notify.failure('No found actors!');\n      }\n      setMovies(res);\n    } catch (error) {\n      setError('Ooops. Something went wrong...');\n    } finally {\n      setLoading(false);\n    }\n  };\n  fetchMovies();\n}, [movieId]);\n\n\n  return (\n      <div>\n        <h1 className={styles.title}>Trending Movies</h1>\n        {loading ? Notiflix.Loading.pulse() : Notiflix.Loading.remove()}\n          {error && Notiflix.Notify.failure(`${error}`)}\n        {movies && <MovieList movies={movies} />}\n      </div>\n  );\n}\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movies","location","useLocation","map","title","name","to","state","from","HomePage","useState","setMovies","error","setError","loading","setLoading","movieId","useParams","useEffect","fetchMovies","length","Notiflix","className","styles","MovieList"],"sourceRoot":""}