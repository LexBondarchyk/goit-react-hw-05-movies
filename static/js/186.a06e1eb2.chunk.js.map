{"version":3,"file":"static/js/186.a06e1eb2.chunk.js","mappings":"+SAIMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKC,SALO,2CAAH,qDASTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADQ,cACpBJ,EADoB,yBAKnBA,EAAIC,KAAKC,SALU,2CAAH,sDASZG,EAAkB,mCAAG,WAAMC,GAAN,uFACdV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,EADd,oBAC4BX,EAD5B,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDASlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACdV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKO,MALgB,2CAAH,sDAUlBC,EAAkB,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD,yGCV/B,UAtCgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECT,EAAAA,EAAAA,IAAmBC,GAFpB,OAEXV,EAFW,OAGjBmB,QAAQC,IAAIpB,GACZc,EAAWd,GAJM,gDAMjBgB,EAAS,EAAD,IANS,yDAAH,qDASlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQQ,KAAI,SAAAC,GAEX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOhB,GAKnB,QAKR,C","sources":["Api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'Api/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        console.log(res);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(review => {\n          // console.log(review);\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n      {/* {reviews} */}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","console","log","map","review","author","content"],"sourceRoot":""}