{"version":3,"file":"static/js/76.f997fdef.chunk.js","mappings":"8SAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAIhBA,EAAIC,KAAKC,SAJO,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADQ,cACpBJ,EADoB,yBAKnBA,EAAIC,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMC,GAAN,uFACdV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,EADd,oBAC4BX,EAD5B,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAQlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACdV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKO,MALgB,2CAAH,sDASlBC,EAAkB,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD,8IC7C/B,EAA2B,uBAA3B,EAA6D,uB,SC6D7D,EAvDkB,WAChB,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIX,EAAAA,EAAAA,IAAmBG,GAHvB,OAGRV,EAHQ,OAIdc,EAAQd,GAJM,gDAMdgB,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,qDAWfE,GACD,GAAE,CAACV,KAGF,gCACGO,GAAW,aACXF,IAAS,SAACM,EAAA,EAAD,IACTR,EAAUS,QACX,eAAIC,UAAWC,EAAf,SACKX,EAAUY,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAQ,OAClC,gBAA2BJ,UAAWC,EAAtC,WACE,gBACEI,IACED,EAASE,aAAT,0CACuCF,EAASE,cADhD,8BAIFC,IAAG,UAAKH,EAASI,SAEnB,4BACE,uBAAIJ,EAASI,QACb,uCAEE,0BAAOJ,EAASK,oBAbbL,EAASM,QADgB,OAqBtC,wCAIP,C,2EC1Dc,SAASZ,IACtB,OACE,yDAC6B,SAAC,KAAD,CAAMa,GAAG,IAAT,uBAA8B,MAG9D,C","sources":["Api/api.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/pages/NotFoundPage/NotFoundView.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\"};","\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'Api/api';\nimport NotFoundView from '../pages/NotFoundPage/NotFoundView';\n\nimport style from './Cast.module.css';\nconst MovieCast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesCredits(movieId);\n        setCast(res);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <NotFoundView/>}\n      {movieCast.length ? (\n      <ul className={style.castList}>\n          {movieCast.slice(0, 12).map(castItem => (\n            <li key={castItem.cast_id} className={style.castItem}>\n              <img\n                src={\n                  castItem.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${castItem.profile_path}`\n                    : `../../images/broken_img.png`\n                }\n                alt={`${castItem.name}`}\n              />\n              <div>\n                <p>{castItem.name}</p>\n                <p>\n                  Character:\n                  <span>{castItem.character}</span>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No results</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieCast;","import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","movieCast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","NotFoundView","length","className","style","slice","map","castItem","src","profile_path","alt","name","character","cast_id","to"],"sourceRoot":""}