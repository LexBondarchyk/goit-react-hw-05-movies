{"version":3,"file":"static/js/777.e89a7d29.chunk.js","mappings":"+SAIMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKC,SALO,2CAAH,qDASTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADQ,cACpBJ,EADoB,yBAKnBA,EAAIC,KAAKC,SALU,2CAAH,sDASZG,EAAkB,mCAAG,WAAMC,GAAN,uFACdV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,EADd,oBAC4BX,EAD5B,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDASlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACdV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKO,MALgB,2CAAH,sDAUlBC,EAAkB,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD,qIClDhB,SAASQ,IACtB,OACE,yDAC6B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,MAG9D,C,sBCEc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAGAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXrB,EAAAA,EAAAA,MACGuB,MAAK,SAAAnB,GACJa,EAAUb,EACX,IACAoB,OAAM,SAAAN,GACLC,EAAS,kCACTM,QAAQC,IAAIR,EACb,IACAS,SAAQ,kBAAMN,GAAW,EAAjB,GAGd,GAAE,IAEH,IAAMO,GAAcR,IAAYJ,EAAOa,OACvC,OACE,+BACE,4BACE,SAAC,IAAD,CAAaC,KAAM,oBACjBV,GAAWW,IAAAA,QAAAA,UACXX,GAAWW,IAAAA,QAAAA,SACZH,IAAc,SAAChB,EAAD,IACdM,GAASa,IAAAA,OAAAA,QAAA,UAA2Bb,IACpCF,IAAU,SAACgB,EAAA,EAAD,CAAWhB,OAAQA,QAIrC,C,sDC5CD,MAAwB,2B,SCCT,SAASiB,EAAT,GAAgC,IAATH,EAAQ,EAARA,KACpC,OAAO,eAAII,UAAWC,EAAf,SAA6BL,GACrC,C,2CC2BD,IA5BkB,SAAC,GAA8B,IAA5Bd,EAA2B,EAA3BA,OAAQoB,EAAmB,EAAnBA,aAG3B,OACE,+BACE,wBACGpB,EAAOqB,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMzB,GAAE,kBAAaL,GAAM+B,MAAO,CAAEC,KAAMJ,GAA1C,UAEE,wBAAKE,OAHA9B,EADC,OAWnB,C","sources":["Api/api.js","ui/NotFoundView.jsx","components/HomePage/HomePage.js","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n","// import SearchBar from 'components/MoviesPage/MoviesPage';\n\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'Api/api';\nimport NotFoundView from 'ui/NotFoundView';\nimport Notiflix from 'notiflix';\n\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n \n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <div>\n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {(loading && Notiflix.Loading.pulse()) ||\n        (!loading && Notiflix.Loading.remove())}\n        {isNotFound && <NotFoundView />}\n        {error && Notiflix.Notify.failure(`${error}`)}\n        {movies && <MovieList movies={movies} />}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import style from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={style.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              {}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","NotFoundView","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","then","catch","console","log","finally","isNotFound","length","text","Notiflix","MovieList","PageHeading","className","style","prevLocation","map","original_title","state","from"],"sourceRoot":""}