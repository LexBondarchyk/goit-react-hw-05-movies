{"version":3,"file":"static/js/154.a8810e4f.chunk.js","mappings":"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","sources":["Api/api.js","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx","webpack://react-homework-template/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/SearchBar.jsx","views/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import style from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={style.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              {}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__Hzb4A\",\"Searchbar\":\"MoviesPage_Searchbar__IcV0j\",\"SearchForm\":\"MoviesPage_SearchForm__kpN7l\",\"SearchFormButton\":\"MoviesPage_SearchFormButton__pBDYN\",\"SearchFormButtonLabel\":\"MoviesPage_SearchFormButtonLabel__q049z\",\"SearchForInput\":\"MoviesPage_SearchForInput__tIM3i\",\"SearchFormInput\":\"MoviesPage_SearchFormInput__9qTli\"};","import styles from './MoviesPage.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.Searchbar}>\n      <div className={styles.SearchForm}>\n        <button\n          type=\"submit\"\n          className={styles.SearchFormButton}\n        >\n        <div className={styles.SearchFormButtonLabel}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352c79.5 0 144-64.5 144-144s-64.5-144-144-144S64 128.5 64 208s64.5 144 144 144z\" />\n            </svg>\n          </div>\n        </button>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={styles.SearchForInput}\n        />\n        </div>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/MoviesPage/SearchBar';\nimport { fetchByQuery } from 'Api/api';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <div>\n        <PageHeading text={'Movie Search'} />\n        {/* <h1>Movies search</h1> */}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </div>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","PageHeading","text","className","style","movies","prevLocation","map","original_title","to","state","from","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","styles","type","xmlns","viewBox","d","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","console","log","finally","MovieList"],"sourceRoot":""}